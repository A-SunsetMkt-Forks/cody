{
  "log": {
    "_recordingName": "Normal",
    "creator": {
      "comment": "persister:cody-fs",
      "name": "Polly.JS",
      "version": "6.0.6"
    },
    "entries": [
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "101"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"query\":\"\\nquery SiteProductVersion {\\n    site {\\n        productVersion\\n    }\\n}\",\"variables\":{}}"
          },
          "queryString": [
            {
              "name": "SiteProductVersion",
              "value": null
            }
          ],
          "url": "https://sourcegraph.com/.api/graphql?SiteProductVersion"
        },
        "response": {
          "bodySize": 136,
          "content": {
            "encoding": "base64",
            "mimeType": "application/json",
            "size": 136,
            "text": "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqzixJBdEFRfkppcklYalFxZn5eUpWSkamZuYGhvFGBkYmugaGugam8aZ6RrpGxiamqSkWacnGRiZKtbW1AAAAAP//AwC7GWWbSQAAAA==\"]"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "transfer-encoding",
              "value": "chunked"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "retry-after",
              "value": "139"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache, max-age=0"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            }
          ],
          "headersSize": 1425,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "189"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"query\":\"\\nquery Repository($name: String!) {\\n\\trepository(name: $name) {\\n                id\\n                embeddingExists\\n\\t}\\n}\",\"variables\":{\"name\":\"github.com/sourcegraph/cody\"}}"
          },
          "queryString": [
            {
              "name": "Repository",
              "value": null
            }
          ],
          "url": "https://sourcegraph.com/.api/graphql?Repository"
        },
        "response": {
          "bodySize": 155,
          "content": {
            "encoding": "base64",
            "mimeType": "application/json",
            "size": 155,
            "text": "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSi3IL84syS+qBPEyU5SslEJzw8qTjP0KUtwtK1ND8o18Q3wr/UJ8K/0dbW2VdJRSc5NSU1Iy89JdKzKLS4qVrEqKSlNra2sBAAAA//8=\",\"AwD/h5WCVAAAAA==\"]"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "transfer-encoding",
              "value": "chunked"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "retry-after",
              "value": "139"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache, max-age=0"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            }
          ],
          "headersSize": 1425,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "164"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"query\":\"\\nquery SiteIdentification {\\n\\tsite {\\n\\t\\tsiteID\\n\\t\\tproductSubscription {\\n\\t\\t\\tlicense {\\n\\t\\t\\t\\thashedKey\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\",\"variables\":{}}"
          },
          "queryString": [
            {
              "name": "SiteIdentification",
              "value": null
            }
          ],
          "url": "https://sourcegraph.com/.api/graphql?SiteIdentification"
        },
        "response": {
          "bodySize": 212,
          "content": {
            "encoding": "base64",
            "mimeType": "application/json",
            "size": 212,
            "text": "[\"H4sIAAAAAAAAAzTLsQ6CMBCA4Xe52aGFcrbMLoaRwfnuekgTA6QtgyG+u8HEf/mn74BIlaA/oKSq/99v0MO47ln0mWmbH8pwgS2vcZc67lwkp62mdTnBK4ku5WdnKrPGQd/QA0cfsONGdWoJLTs1HborOWNNgwZRvLcWxXfBkRFr2ASZuPUc1CIG+Jx9AQAA//8DAGHOuFqgAAAA\"]"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "transfer-encoding",
              "value": "chunked"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "retry-after",
              "value": "139"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache, max-age=0"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            }
          ],
          "headersSize": 1425,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "318"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"query\":\"\\nquery CurrentSiteCodyLlmConfiguration {\\n    site {\\n        codyLLMConfiguration {\\n            chatModel\\n            chatModelMaxTokens\\n            fastChatModel\\n            fastChatModelMaxTokens\\n            completionModel\\n            completionModelMaxTokens\\n        }\\n    }\\n}\",\"variables\":{}}"
          },
          "queryString": [
            {
              "name": "CurrentSiteCodyLlmConfiguration",
              "value": null
            }
          ],
          "url": "https://sourcegraph.com/.api/graphql?CurrentSiteCodyLlmConfiguration"
        },
        "response": {
          "bodySize": 212,
          "content": {
            "encoding": "base64",
            "mimeType": "application/json",
            "size": 212,
            "text": "[\"H4sIAAAAAAAAA4zOsQqDMBDG8Xe5WW10a1ZXs/UFjiTW0PROzAktkncvulgylE4HH39+3AYOBUFvkIL4/Vp272EwPdMY7uuCEpiOfUIx7HwEDUgyLTwHe7ERV+frrlFQnYnB140fnhLotlNKVTBikv6XECgJktQtFPGXdT0oy885+v2tv7AiL7icc/4AAAD//wMAqZjCzQQBAAA=\"]"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "transfer-encoding",
              "value": "chunked"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "retry-after",
              "value": "139"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache, max-age=0"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            }
          ],
          "headersSize": 1425,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "155"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"query\":\"\\nquery CurrentSiteCodyLlmConfiguration {\\n    site {\\n        codyLLMConfiguration {\\n            provider\\n        }\\n    }\\n}\",\"variables\":{}}"
          },
          "queryString": [
            {
              "name": "CurrentSiteCodyLlmConfiguration",
              "value": null
            }
          ],
          "url": "https://sourcegraph.com/.api/graphql?CurrentSiteCodyLlmConfiguration"
        },
        "response": {
          "bodySize": 128,
          "content": {
            "encoding": "base64",
            "mimeType": "application/json",
            "size": 128,
            "text": "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqzixJBdHJ+SmVPj6+zvl5aZnppUWJJZn5eSDxgqL8ssyU1CIlK6Xi/NKi5NT0osSCDKXa2tpaAAAAAP//AwAfFAXARQAAAA==\"]"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "transfer-encoding",
              "value": "chunked"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "retry-after",
              "value": "139"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache, max-age=0"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            }
          ],
          "headersSize": 1425,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "233"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"query\":\"\\nquery CurrentUser {\\n    currentUser {\\n        id\\n        hasVerifiedEmail\\n        displayName\\n        avatarURL\\n        codyProEnabled\\n        primaryEmail {\\n            email\\n        }\\n    }\\n}\",\"variables\":{}}"
          },
          "queryString": [
            {
              "name": "CurrentUser",
              "value": null
            }
          ],
          "url": "https://sourcegraph.com/.api/graphql?CurrentUser"
        },
        "response": {
          "bodySize": 304,
          "content": {
            "encoding": "base64",
            "mimeType": "application/json",
            "size": 304,
            "text": "[\"H4sIAAAAAAAAAzSOQWrDMBRErxJmbWKXptAKSrtoyCaYUEholz/Sj60iS+ZLCrjGp+gJepZcrLhpdzNvMfNGGEoENUJnEfZpH1nmag0UDm+10x/hs355v0OBluKBxZ4sm3VH1kElyVzA2Ng7GmrqGAqXL0enLIvd5du5xYatxBg8CtCZEsn+dQuFNqU+qrK8slgtG5vafMyRRQef2KelDl2Zy5tVdV893D6dH1cooIMZdhLWno6Ozf9/L7YjGf6cRvA1IPyK9M1zM4N5ENM0TT8AAAD//wMAYDFO0fQAAAA=\"]"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "transfer-encoding",
              "value": "chunked"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "retry-after",
              "value": "138"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache, max-age=0"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            }
          ],
          "headersSize": 1425,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "147"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"query\":\"\\n    query FeatureFlags {\\n        evaluatedFeatureFlags() {\\n            name\\n            value\\n          }\\n    }\\n\",\"variables\":{}}"
          },
          "queryString": [
            {
              "name": "FeatureFlags",
              "value": null
            }
          ],
          "url": "https://sourcegraph.com/.api/graphql?FeatureFlags"
        },
        "response": {
          "bodySize": 800,
          "content": {
            "encoding": "base64",
            "mimeType": "application/json",
            "size": 800,
            "text": "[\"H4sIAAAAAAAA/5xVUXLrNgy8i76DC/gAuUSnHyAIi6gpUgFA22omd+9Q9eQlTmS9vD/NEEsCi93V6xDRcTi8DnzG3NA5PjN6U37OONpw+Ot1KDjxcBioxgUuHMAkckAdnoYO4eHg2vjt6b3QGJUSUC3OxSGgcYSMZYTIzuRSyy/sEbN9BK+vYPNKdZozO4MrkpRxB9Ib4yheFZRJZrbN/jBOUgAL5sWFDLhgyBw36/8/B3NlnKSMMIpDyP1wC/J1ij5/w7F/OBdaNqEh1wBzr7SLOCVAZTSwVNWp+fZY7zRgzo+L+DqzysTFcafy0wiRj9iygzkq1cgKaQkq28R9c4XYyqUyLZQ7l/UIs/JZajNQfmlsH0e8X/VNWpFDeyCIWWts5GAtGKnMXXEGxnoWYkCi2or/RIKrlK8O4TjCJNePWrkHjzoT/Fv55Hv+kDI373u9QBLzqtuaWDuatcI/7EFRyrYKbpfvbMZkLG0Ga3rm5asBvjJSXNEcVkYEi4MtxfEKScaUZUy+71BK6DBVOoGzbbODRGwmXSVHyd3+/BOfxaXgJARTyy5ZCsPtqGvg8dr2ndVH2GNesZw+kfHHvgKrTYlHxTltd/7ShE4r1sFrUzhW7fcnLi7UAx2ase6bqvAFTrxcqj5Qwn12ElJ6t/UD3O2NeimslmTepOd77ypj5+W3LazYI1cmcQO+EnPkuBLTpfdQqhjgLLb+R1Y2L+IJSnUOtZ52wvfbzMiVMO+lRofvun+zwDnzxK5rsle9l+jfb2//BQAA///x4YTa5wcAAA==\"]"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "transfer-encoding",
              "value": "chunked"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "retry-after",
              "value": "138"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache, max-age=0"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            }
          ],
          "headersSize": 1425,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "144"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"query\":\"\\nquery Repository($name: String!) {\\n\\trepository(name: $name) {\\n\\t\\tid\\n\\t}\\n}\",\"variables\":{\"name\":\"github.com/sourcegraph/cody\"}}"
          },
          "queryString": [
            {
              "name": "Repository",
              "value": null
            }
          ],
          "url": "https://sourcegraph.com/.api/graphql?Repository"
        },
        "response": {
          "bodySize": 120,
          "content": {
            "encoding": "base64",
            "mimeType": "application/json",
            "size": 120,
            "text": "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSi3IL84syS+qBPEyU5SslEJzw8qTjP0KUtwtK1ND8o18Q3wr/UJ8K/0dbW2VamtrAQAAAP//AwDHAhygPQAAAA==\"]"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "transfer-encoding",
              "value": "chunked"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "retry-after",
              "value": "138"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache, max-age=0"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            }
          ],
          "headersSize": 1425,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "177"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"query\":\"\\n    query EvaluateFeatureFlag($flagName: String!) {\\n        evaluateFeatureFlag(flagName: $flagName)\\n    }\\n\",\"variables\":{\"flagName\":\"cody-autocomplete-tracing\"}}"
          },
          "queryString": [
            {
              "name": "EvaluateFeatureFlag",
              "value": null
            }
          ],
          "url": "https://sourcegraph.com/.api/graphql?EvaluateFeatureFlag"
        },
        "response": {
          "bodySize": 38,
          "content": {
            "mimeType": "application/json",
            "size": 38,
            "text": "{\"data\":{\"evaluateFeatureFlag\":false}}"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "content-length",
              "value": "38"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "retry-after",
              "value": "138"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache, max-age=0"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            }
          ],
          "headersSize": 1393,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "187"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"query\":\"\\n    query EvaluateFeatureFlag($flagName: String!) {\\n        evaluateFeatureFlag(flagName: $flagName)\\n    }\\n\",\"variables\":{\"flagName\":\"cody-autocomplete-context-lsp-light\"}}"
          },
          "queryString": [
            {
              "name": "EvaluateFeatureFlag",
              "value": null
            }
          ],
          "url": "https://sourcegraph.com/.api/graphql?EvaluateFeatureFlag"
        },
        "response": {
          "bodySize": 37,
          "content": {
            "mimeType": "application/json",
            "size": 37,
            "text": "{\"data\":{\"evaluateFeatureFlag\":null}}"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "content-length",
              "value": "37"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "retry-after",
              "value": "138"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache, max-age=0"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            }
          ],
          "headersSize": 1393,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "181"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"query\":\"\\n    query EvaluateFeatureFlag($flagName: String!) {\\n        evaluateFeatureFlag(flagName: $flagName)\\n    }\\n\",\"variables\":{\"flagName\":\"cody-autocomplete-context-bfg\"}}"
          },
          "queryString": [
            {
              "name": "EvaluateFeatureFlag",
              "value": null
            }
          ],
          "url": "https://sourcegraph.com/.api/graphql?EvaluateFeatureFlag"
        },
        "response": {
          "bodySize": 37,
          "content": {
            "mimeType": "application/json",
            "size": 37,
            "text": "{\"data\":{\"evaluateFeatureFlag\":null}}"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "content-length",
              "value": "37"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "retry-after",
              "value": "138"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache, max-age=0"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            }
          ],
          "headersSize": 1393,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "180"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"query\":\"\\n    query EvaluateFeatureFlag($flagName: String!) {\\n        evaluateFeatureFlag(flagName: $flagName)\\n    }\\n\",\"variables\":{\"flagName\":\"cody-autocomplete-hot-streak\"}}"
          },
          "queryString": [
            {
              "name": "EvaluateFeatureFlag",
              "value": null
            }
          ],
          "url": "https://sourcegraph.com/.api/graphql?EvaluateFeatureFlag"
        },
        "response": {
          "bodySize": 37,
          "content": {
            "mimeType": "application/json",
            "size": 37,
            "text": "{\"data\":{\"evaluateFeatureFlag\":null}}"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "content-length",
              "value": "37"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "retry-after",
              "value": "138"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache, max-age=0"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            }
          ],
          "headersSize": 1393,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "734"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"query\":\"\\nmutation LogEventMutation($event: String!, $userCookieID: String!, $url: String!, $source: EventSource!, $argument: String, $publicArgument: String, $client: String, $connectedSiteID: String, $hashedLicenseKey: String) {\\n    logEvent(\\n\\t\\tevent: $event\\n\\t\\tuserCookieID: $userCookieID\\n\\t\\turl: $url\\n\\t\\tsource: $source\\n\\t\\targument: $argument\\n\\t\\tpublicArgument: $publicArgument\\n\\t\\tclient: $client\\n\\t\\tconnectedSiteID: $connectedSiteID\\n\\t\\thashedLicenseKey: $hashedLicenseKey\\n    ) {\\n\\t\\talwaysNil\\n\\t}\\n}\",\"variables\":{\"event\":\"CodyVSCodeExtension:Auth:connected\",\"userCookieID\":\"ANONYMOUS_USER_COOKIE_ID\",\"source\":\"IDEEXTENSION\",\"url\":\"\",\"client\":\"VSCODE_CODY_EXTENSION\",\"connectedSiteID\":\"SourcegraphWeb\"}}"
          },
          "queryString": [
            {
              "name": "LogEventMutation",
              "value": null
            }
          ],
          "url": "https://sourcegraph.com/.api/graphql?LogEventMutation"
        },
        "response": {
          "bodySize": 26,
          "content": {
            "mimeType": "application/json",
            "size": 26,
            "text": "{\"data\":{\"logEvent\":null}}"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "content-length",
              "value": "26"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "retry-after",
              "value": "137"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache, max-age=0"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            }
          ],
          "headersSize": 1393,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "160"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"query\":\"\\n    query EvaluateFeatureFlag($flagName: String!) {\\n        evaluateFeatureFlag(flagName: $flagName)\\n    }\\n\",\"variables\":{\"flagName\":\"cody-pro\"}}"
          },
          "queryString": [
            {
              "name": "EvaluateFeatureFlag",
              "value": null
            }
          ],
          "url": "https://sourcegraph.com/.api/graphql?EvaluateFeatureFlag"
        },
        "response": {
          "bodySize": 37,
          "content": {
            "mimeType": "application/json",
            "size": 37,
            "text": "{\"data\":{\"evaluateFeatureFlag\":true}}"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "content-length",
              "value": "37"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "retry-after",
              "value": "137"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache, max-age=0"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            }
          ],
          "headersSize": 1393,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "187"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"query\":\"\\n    query EvaluateFeatureFlag($flagName: String!) {\\n        evaluateFeatureFlag(flagName: $flagName)\\n    }\\n\",\"variables\":{\"flagName\":\"cody-autocomplete-context-bfg-mixed\"}}"
          },
          "queryString": [
            {
              "name": "EvaluateFeatureFlag",
              "value": null
            }
          ],
          "url": "https://sourcegraph.com/.api/graphql?EvaluateFeatureFlag"
        },
        "response": {
          "bodySize": 38,
          "content": {
            "mimeType": "application/json",
            "size": 38,
            "text": "{\"data\":{\"evaluateFeatureFlag\":false}}"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "content-length",
              "value": "38"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "retry-after",
              "value": "137"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache, max-age=0"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            }
          ],
          "headersSize": 1393,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "189"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"query\":\"\\n    query EvaluateFeatureFlag($flagName: String!) {\\n        evaluateFeatureFlag(flagName: $flagName)\\n    }\\n\",\"variables\":{\"flagName\":\"cody-autocomplete-context-local-mixed\"}}"
          },
          "queryString": [
            {
              "name": "EvaluateFeatureFlag",
              "value": null
            }
          ],
          "url": "https://sourcegraph.com/.api/graphql?EvaluateFeatureFlag"
        },
        "response": {
          "bodySize": 38,
          "content": {
            "mimeType": "application/json",
            "size": 38,
            "text": "{\"data\":{\"evaluateFeatureFlag\":false}}"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "content-length",
              "value": "38"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "retry-after",
              "value": "137"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache, max-age=0"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            }
          ],
          "headersSize": 1393,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "208"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"query\":\"\\n    query EvaluateFeatureFlag($flagName: String!) {\\n        evaluateFeatureFlag(flagName: $flagName)\\n    }\\n\",\"variables\":{\"flagName\":\"cody-autocomplete-disable-recycling-of-previous-requests\"}}"
          },
          "queryString": [
            {
              "name": "EvaluateFeatureFlag",
              "value": null
            }
          ],
          "url": "https://sourcegraph.com/.api/graphql?EvaluateFeatureFlag"
        },
        "response": {
          "bodySize": 38,
          "content": {
            "mimeType": "application/json",
            "size": 38,
            "text": "{\"data\":{\"evaluateFeatureFlag\":false}}"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "content-length",
              "value": "38"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "retry-after",
              "value": "137"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache, max-age=0"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            }
          ],
          "headersSize": 1393,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "199"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"query\":\"\\n    query EvaluateFeatureFlag($flagName: String!) {\\n        evaluateFeatureFlag(flagName: $flagName)\\n    }\\n\",\"variables\":{\"flagName\":\"cody-autocomplete-dynamic-multiline-completions\"}}"
          },
          "queryString": [
            {
              "name": "EvaluateFeatureFlag",
              "value": null
            }
          ],
          "url": "https://sourcegraph.com/.api/graphql?EvaluateFeatureFlag"
        },
        "response": {
          "bodySize": 38,
          "content": {
            "mimeType": "application/json",
            "size": 38,
            "text": "{\"data\":{\"evaluateFeatureFlag\":false}}"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "content-length",
              "value": "38"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "retry-after",
              "value": "137"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache, max-age=0"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            }
          ],
          "headersSize": 1393,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "342"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"query\":\"\\nmutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {\\n\\ttelemetry {\\n\\t\\trecordEvents(events: $events) {\\n\\t\\t\\talwaysNil\\n\\t\\t}\\n\\t}\\n}\\n\",\"variables\":{\"events\":[{\"feature\":\"cody.auth\",\"action\":\"connected\",\"source\":{\"client\":\"VSCode.Cody\",\"clientVersion\":\"1.0.5\"},\"parameters\":{\"version\":0,\"privateMetadata\":{}}}]}}"
          },
          "queryString": [
            {
              "name": "RecordTelemetryEvents",
              "value": null
            }
          ],
          "url": "https://sourcegraph.com/.api/graphql?RecordTelemetryEvents"
        },
        "response": {
          "bodySize": 119,
          "content": {
            "encoding": "base64",
            "mimeType": "application/json",
            "size": 119,
            "text": "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSc1JzU0tKaoEcYpSk/OLUlzLUvNKikH8xJzyxMpiv8wcJau80pyc2traWgAAAAD//w==\",\"AwCEdn1qOgAAAA==\"]"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "transfer-encoding",
              "value": "chunked"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "retry-after",
              "value": "137"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache, max-age=0"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            }
          ],
          "headersSize": 1425,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "731"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"query\":\"\\nmutation LogEventMutation($event: String!, $userCookieID: String!, $url: String!, $source: EventSource!, $argument: String, $publicArgument: String, $client: String, $connectedSiteID: String, $hashedLicenseKey: String) {\\n    logEvent(\\n\\t\\tevent: $event\\n\\t\\tuserCookieID: $userCookieID\\n\\t\\turl: $url\\n\\t\\tsource: $source\\n\\t\\targument: $argument\\n\\t\\tpublicArgument: $publicArgument\\n\\t\\tclient: $client\\n\\t\\tconnectedSiteID: $connectedSiteID\\n\\t\\thashedLicenseKey: $hashedLicenseKey\\n    ) {\\n\\t\\talwaysNil\\n\\t}\\n}\",\"variables\":{\"event\":\"CodyVSCodeExtension:Auth:failed\",\"userCookieID\":\"ANONYMOUS_USER_COOKIE_ID\",\"source\":\"IDEEXTENSION\",\"url\":\"\",\"client\":\"VSCODE_CODY_EXTENSION\",\"connectedSiteID\":\"SourcegraphWeb\"}}"
          },
          "queryString": [
            {
              "name": "LogEventMutation",
              "value": null
            }
          ],
          "url": "https://sourcegraph.com/.api/graphql?LogEventMutation"
        },
        "response": {
          "bodySize": 26,
          "content": {
            "mimeType": "application/json",
            "size": 26,
            "text": "{\"data\":{\"logEvent\":null}}"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "content-length",
              "value": "26"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "retry-after",
              "value": "135"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache, max-age=0"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            }
          ],
          "headersSize": 1393,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "339"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"query\":\"\\nmutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {\\n\\ttelemetry {\\n\\t\\trecordEvents(events: $events) {\\n\\t\\t\\talwaysNil\\n\\t\\t}\\n\\t}\\n}\\n\",\"variables\":{\"events\":[{\"feature\":\"cody.auth\",\"action\":\"failed\",\"source\":{\"client\":\"VSCode.Cody\",\"clientVersion\":\"1.0.5\"},\"parameters\":{\"version\":0,\"privateMetadata\":{}}}]}}"
          },
          "queryString": [
            {
              "name": "RecordTelemetryEvents",
              "value": null
            }
          ],
          "url": "https://sourcegraph.com/.api/graphql?RecordTelemetryEvents"
        },
        "response": {
          "bodySize": 112,
          "content": {
            "encoding": "base64",
            "mimeType": "application/json",
            "size": 112,
            "text": "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSc1JzU0tKaoEcYpSk/OLUlzLUvNKikH8xJzyxMpiv8wcJau80pyc2traWgAAAAD//wMAhHZ9ajoAAAA=\"]"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "transfer-encoding",
              "value": "chunked"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "retry-after",
              "value": "135"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache, max-age=0"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            }
          ],
          "headersSize": 1425,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "182"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"query\":\"\\n    query EvaluateFeatureFlag($flagName: String!) {\\n        evaluateFeatureFlag(flagName: $flagName)\\n    }\\n\",\"variables\":{\"flagName\":\"cody-autocomplete-user-latency\"}}"
          },
          "queryString": [
            {
              "name": "EvaluateFeatureFlag",
              "value": null
            }
          ],
          "url": "https://sourcegraph.com/.api/graphql?EvaluateFeatureFlag"
        },
        "response": {
          "bodySize": 37,
          "content": {
            "mimeType": "application/json",
            "size": 37,
            "text": "{\"data\":{\"evaluateFeatureFlag\":null}}"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "content-length",
              "value": "37"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "retry-after",
              "value": "134"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache, max-age=0"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            }
          ],
          "headersSize": 1393,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip;q=0"
            },
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "keep-alive"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "1273"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"timeoutMs\":15000,\"maxTokensToSample\":256,\"stopSequences\":[\"\\n\\nHuman:\",\"</CODE5711>\"],\"temperature\":0.5,\"topK\":0,\"messages\":[{\"speaker\":\"human\",\"text\":\"You are a code completion AI designed to take the surrounding code and shared context into account in order to predict and suggest high-quality code to complete the code enclosed in <CODE5711> tags. You only response with code that works and fits seamlessly with surrounding code if any or use best practice and nothing else.\"},{\"speaker\":\"assistant\",\"text\":\"I am a code completion AI with exceptional context-awareness designed to auto-complete nested code blocks with high-quality code that seamlessly integrates with surrounding code.\"},{\"speaker\":\"human\",\"text\":\"Below is the code from file path src/sum.ts. Review the code outside the XML tags to detect the functionality, formats, style, patterns, and logics in use. Then, use what you detect and reuse methods/libraries to complete and enclose completed code only inside XML tags precisely without duplicating existing implementations. Here is the code: \\n```\\nexport function sum(a: number, b: number): number {\\n   <CODE5711></CODE5711> \\n}\\n\\n```\"},{\"speaker\":\"assistant\",\"text\":\"<CODE5711>export function sum(a: number, b: number): number {\"}],\"stream\":true}"
          },
          "queryString": [],
          "url": "https://sourcegraph.com/.api/completions/code"
        },
        "response": {
          "bodySize": 619,
          "content": {
            "mimeType": "text/event-stream",
            "size": 619,
            "text": "event: completion\ndata: {\"completion\":\"\\n \",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\"\\n  return\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\"\\n  return a\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\"\\n  return a +\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\"\\n  return a + b\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\"\\n  return a + b;\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\"\\n  return a + b;\\n}\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\"\\n  return a + b;\\n}\",\"stopReason\":\"stop_sequence\"}\n\nevent: done\ndata: {}\n\n"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "text/event-stream"
            },
            {
              "name": "transfer-encoding",
              "value": "chunked"
            },
            {
              "name": "connection",
              "value": "keep-alive"
            },
            {
              "name": "retry-after",
              "value": "134"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            }
          ],
          "headersSize": 1396,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "753"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"query\":\"\\nmutation LogEventMutation($event: String!, $userCookieID: String!, $url: String!, $source: EventSource!, $argument: String, $publicArgument: String, $client: String, $connectedSiteID: String, $hashedLicenseKey: String) {\\n    logEvent(\\n\\t\\tevent: $event\\n\\t\\tuserCookieID: $userCookieID\\n\\t\\turl: $url\\n\\t\\tsource: $source\\n\\t\\targument: $argument\\n\\t\\tpublicArgument: $publicArgument\\n\\t\\tclient: $client\\n\\t\\tconnectedSiteID: $connectedSiteID\\n\\t\\thashedLicenseKey: $hashedLicenseKey\\n    ) {\\n\\t\\talwaysNil\\n\\t}\\n}\",\"variables\":{\"event\":\"CodyVSCodeExtension:completion:unexpectedNotSuggested\",\"userCookieID\":\"ANONYMOUS_USER_COOKIE_ID\",\"source\":\"IDEEXTENSION\",\"url\":\"\",\"client\":\"VSCODE_CODY_EXTENSION\",\"connectedSiteID\":\"SourcegraphWeb\"}}"
          },
          "queryString": [
            {
              "name": "LogEventMutation",
              "value": null
            }
          ],
          "url": "https://sourcegraph.com/.api/graphql?LogEventMutation"
        },
        "response": {
          "bodySize": 26,
          "content": {
            "mimeType": "application/json",
            "size": 26,
            "text": "{\"data\":{\"logEvent\":null}}"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "content-length",
              "value": "26"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "retry-after",
              "value": "132"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache, max-age=0"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            }
          ],
          "headersSize": 1393,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "739"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"query\":\"\\nmutation LogEventMutation($event: String!, $userCookieID: String!, $url: String!, $source: EventSource!, $argument: String, $publicArgument: String, $client: String, $connectedSiteID: String, $hashedLicenseKey: String) {\\n    logEvent(\\n\\t\\tevent: $event\\n\\t\\tuserCookieID: $userCookieID\\n\\t\\turl: $url\\n\\t\\tsource: $source\\n\\t\\targument: $argument\\n\\t\\tpublicArgument: $publicArgument\\n\\t\\tclient: $client\\n\\t\\tconnectedSiteID: $connectedSiteID\\n\\t\\thashedLicenseKey: $hashedLicenseKey\\n    ) {\\n\\t\\talwaysNil\\n\\t}\\n}\",\"variables\":{\"event\":\"CodyVSCodeExtension:completion:accepted\",\"userCookieID\":\"ANONYMOUS_USER_COOKIE_ID\",\"source\":\"IDEEXTENSION\",\"url\":\"\",\"client\":\"VSCODE_CODY_EXTENSION\",\"connectedSiteID\":\"SourcegraphWeb\"}}"
          },
          "queryString": [
            {
              "name": "LogEventMutation",
              "value": null
            }
          ],
          "url": "https://sourcegraph.com/.api/graphql?LogEventMutation"
        },
        "response": {
          "bodySize": 26,
          "content": {
            "mimeType": "application/json",
            "size": 26,
            "text": "{\"data\":{\"logEvent\":null}}"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "content-length",
              "value": "26"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "retry-after",
              "value": "132"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache, max-age=0"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            }
          ],
          "headersSize": 1393,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "361"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"query\":\"\\nmutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {\\n\\ttelemetry {\\n\\t\\trecordEvents(events: $events) {\\n\\t\\t\\talwaysNil\\n\\t\\t}\\n\\t}\\n}\\n\",\"variables\":{\"events\":[{\"feature\":\"cody.completion\",\"action\":\"unexpectedNotSuggested\",\"source\":{\"client\":\"VSCode.Cody\",\"clientVersion\":\"1.0.5\"},\"parameters\":{\"version\":0,\"privateMetadata\":{}}}]}}"
          },
          "queryString": [
            {
              "name": "RecordTelemetryEvents",
              "value": null
            }
          ],
          "url": "https://sourcegraph.com/.api/graphql?RecordTelemetryEvents"
        },
        "response": {
          "bodySize": 112,
          "content": {
            "encoding": "base64",
            "mimeType": "application/json",
            "size": 112,
            "text": "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSc1JzU0tKaoEcYpSk/OLUlzLUvNKikH8xJzyxMpiv8wcJau80pyc2traWgAAAAD//wMAhHZ9ajoAAAA=\"]"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "transfer-encoding",
              "value": "chunked"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "retry-after",
              "value": "132"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache, max-age=0"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            }
          ],
          "headersSize": 1425,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "347"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"query\":\"\\nmutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {\\n\\ttelemetry {\\n\\t\\trecordEvents(events: $events) {\\n\\t\\t\\talwaysNil\\n\\t\\t}\\n\\t}\\n}\\n\",\"variables\":{\"events\":[{\"feature\":\"cody.completion\",\"action\":\"accepted\",\"source\":{\"client\":\"VSCode.Cody\",\"clientVersion\":\"1.0.5\"},\"parameters\":{\"version\":0,\"privateMetadata\":{}}}]}}"
          },
          "queryString": [
            {
              "name": "RecordTelemetryEvents",
              "value": null
            }
          ],
          "url": "https://sourcegraph.com/.api/graphql?RecordTelemetryEvents"
        },
        "response": {
          "bodySize": 112,
          "content": {
            "encoding": "base64",
            "mimeType": "application/json",
            "size": 112,
            "text": "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSc1JzU0tKaoEcYpSk/OLUlzLUvNKikH8xJzyxMpiv8wcJau80pyc2traWgAAAAD//wMAhHZ9ajoAAAA=\"]"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "transfer-encoding",
              "value": "chunked"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "retry-after",
              "value": "132"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache, max-age=0"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            }
          ],
          "headersSize": 1425,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "593"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"query\":\"\\nquery LegacyEmbeddingsSearch($repo: ID!, $query: String!, $codeResultsCount: Int!, $textResultsCount: Int!) {\\n\\tembeddingsSearch(repo: $repo, query: $query, codeResultsCount: $codeResultsCount, textResultsCount: $textResultsCount) {\\n\\t\\tcodeResults {\\n\\t\\t\\tfileName\\n\\t\\t\\tstartLine\\n\\t\\t\\tendLine\\n\\t\\t\\tcontent\\n\\t\\t}\\n\\t\\ttextResults {\\n\\t\\t\\tfileName\\n\\t\\t\\tstartLine\\n\\t\\t\\tendLine\\n\\t\\t\\tcontent\\n\\t\\t}\\n\\t}\\n}\",\"variables\":{\"repo\":\"UmVwb3NpdG9yeTo2MTMyNTMyOA==\",\"query\":\"Hello! Reply back with only \\\"Hello\\\" and nothing else\",\"codeResultsCount\":12,\"textResultsCount\":3}}"
          },
          "queryString": [
            {
              "name": "LegacyEmbeddingsSearch",
              "value": null
            }
          ],
          "url": "https://sourcegraph.com/.api/graphql?LegacyEmbeddingsSearch"
        },
        "response": {
          "bodySize": 4853,
          "content": {
            "encoding": "base64",
            "mimeType": "application/json",
            "size": 4853,
            "text": "[\"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\",\"ciuLXMAjVqAnXXAB+w4=\",\"TkA3Sr1oM8Bas4YTePQYTiJB36vVw38SndvjjMKxMsWjg3Dh9RdjVf67g8cvBrc/DAdU3B6+tVwLtfSlNU1Ruonj685xlT8w4+xxxt//Ht4I31ih4KKd2IQ7021/K6sCnM1OZoPS+9pNJxPnjRUFjgtjCoWilm6cmao/+nQOvZvMlSkmKzfiCyzTlZxRIjVB+ej48PjJSAdJRu3saFzIxfZudKaJksC8kSp3IKKYwNPnroVRJhMqNj3eBNYnPaBwMjRHC9nOdDam+fTx70nftjA2zMIEREm2UyyuBGEy9enjz7Vwbm1sDqVwpdTFp4//ILY4I8PqOBq06ImqzQZ06o+NzJZqE04n7mBq1N0s3SVTyKBG9CMp/cUXn37+H/jWmpGXtePGKBBCssanj3939znwiy9aB85tsOGnj/8N5zqzKGJ79mMjlPRJA0hibO/L5htALeaKTpsNor3jXAoe/Qm9eDwbdL3b39g9l+i91IX74VFmqkrofJqZfDN2XvjGjebCjhnQBfW5j8fA1wt8CLpwfLyAI/HueMGlLhcUBC3/C6E33qfx96bhTiJ+zASfXOA21dyoyPW9MUMm8f9FTc5e90umj/fRqjQLSY+Hc/DJTg6elsL/hglHf43irfHq8Oj5yKIip8cX9CQajn9ao9zo8PB4N9/umbTvG/B7U8vMDSkL4sA3izP3bVM/DLSfw4RN1LkmKw1x5XYifHHx2g3hjyOipHxuSJKt01zbcPI4DnUpdIZ50m+N1sSvmXdHRTmXulAgt4AIASd4TgheVhgzi2Ivx4UgMrbEDYMWuNJYnzU8VLl+yw3kNVxPrqkTqUT29pJFun6pfPf4L1LnZu14unP8FC6kbm4+n9Ms1f7kPWuz8dPHn89arWNCfvr4j2AVL4qC1nR+2GO9Qq4w3M91Q7KLi9ehtWhTqu3o9ndhvFRkWUMNEk9f92BNaI/X1Dh6E6zdXZZ3l450cHt1cOcyM4gS2oYhdRns8dlgV/vZ4MHcl/9WqPfLUEQ03mSmqhV6fBhNjnbRhOL+ZfL5/0Mt52vRVIWRdze7AHPJebi20ncXxBSmbFJugduPw/W81AiP4vSUoMFix/cetxPDMXwjPXgx57aY/11HiPNwJRAmN5/LwFTu/ZmYWpfqVUymxlrT6LynTZJPoWvfkccNwZl2CtZeLxUNDwjCAIAimIdG7e0+AfEqMUq8IMWcDflgJpRmhRb4L77xt7hJZKGjHRID8saoubCUJEJ5tFp4udoRWziey9HPMLo3ca7mmqzk+sz255l47DGBaRPfoRLgPihqSwNmg3dWFgXavtWFh9PGOmP5359x1vH4LK4Vceyy1S0B+uGvR/rZbD/Ux+f3YP3g9ofb29v/DQAA//+ogtixmigAAA==\"]"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "transfer-encoding",
              "value": "chunked"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "retry-after",
              "value": "132"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache, max-age=0"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            }
          ],
          "headersSize": 1425,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "accept-encoding",
              "value": "gzip;q=0"
            },
            {
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json",
            "params": [],
            "text": "{\"temperature\":0.2,\"maxTokensToSample\":1000,\"topK\":-1,\"topP\":-1,\"model\":\"anthropic/claude-2.0\",\"messages\":[{\"speaker\":\"human\",\"text\":\"You are Cody, an AI coding assistant from Sourcegraph.\"},{\"speaker\":\"assistant\",\"text\":\"I am Cody, an AI coding assistant from Sourcegraph.\"},{\"speaker\":\"human\",\"text\":\"Use the following text from file `/vscode/walkthroughs/autocomplete.md`:\\n## Code Autocomplete\\n\\n<img src=\\\"https://storage.googleapis.com/sourcegraph-assets/blog/vs-code-onboarding-walkthrough-dec-2023-cody-autocomplete-tsx.gif\\\">\\n\\nStart writing code and Cody will complete the line (or the entire function) for you. Hit tab to accept the suggestion.\\n\\n**✨ Pro-tips for using Cody autocomplete**\\n<br>• Autocomplete uses the surrounding code and context to inform the suggestions, so if you need to guide it you can add a comment above the line you're editing.\\n<br>• You can hover over the grey suggestion to see a toolbar of alternative suggestions, as well as other options such as accepting a single word at a time.\\n<br>• You can use the \\\"Trigger Autocomplete at Cursor\\\" command to trigger a code suggestion at any time, using the default keyboard shortcut of `Option` `\\\\` on macOS and `Alt` `\\\\` on Windows & Linux.\\n\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"speaker\":\"human\",\"text\":\"Use the following text from file `/vscode/walkthroughs/chat.md`:\\n## Chat\\n\\n<img src=\\\"https://storage.googleapis.com/sourcegraph-assets/blog/blog-vscode-v018-release/blog-v018-context-controls-002.gif\\\">\\n\\nAnswer questions about general programming topics, or specific to your codebase, with Cody chat. You can choose between LLMs, @-mentions files and symbols, and enable enhanced repository-wide code context.\\n\\nYou can start a chat at any time using the default keyboard shortcut of `Option` `/` on macOS and `Alt` `/` on Windows & Linux.\\n\\n**✨ Pro-tips for using Cody chat**\\n<br>• Enabling “Enhanced Context”, and tagging specific files and symbols, gives the selected LLM more context to help answer your questions more accurately.\\n<br>• If you want to chat directly with the LLM without any additional context adding, disable \\\"Enhanced Context\\\".\\n<br>• You can increase the quality of your chat responses by enabling \\\"Search Context (Beta)\\\" in your [Cody Settings](command:cody.status-bar.interacted).\\n\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"speaker\":\"human\",\"text\":\"Use the following text from file `/vscode/walkthroughs/search.md`:\\n## Natural Language Search\\n\\n<img src=\\\"https://storage.googleapis.com/sourcegraph-assets/blog/vs-code-onboarding-walkthrough-dec-2023-natural-language.gif\\\">\\n\\nCody builds a Search index of your local files to make it easier to find what you’re looking for. Use a natural language query like “password hashing” or \\\"connection retries\\\" to quickly find and open the files that match your search.\\n\\n**✨ Pro-tips for using Cody’s Natural Language Search**\\n<br>• Increase the quality of your chat responses by enabling \\\"Search Context (Beta)\\\" in your [Cody Settings](command:cody.status-bar.interacted). This enables chat to use the natural language search index as a context source.\\n<br>• You can search file and symbol names too, not just natural language queries.\\n\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"speaker\":\"human\",\"text\":\"Use following code snippet from file `/vscode/src/tree-sitter/query-tests/test-data/parents.ts`:\\n```ts\\nexport function whatsUp() {\\n    const result = {\\n    //    |\\n        value:  'value'\\n    }\\n}\\n\\n// ------------------------------------\\n\\nexport function singleLineVariable() {\\n    const a_very_long_variable_name = 'value'\\n    //                            |\\n}\\n\\n// ------------------------------------\\n\\ninterface kek {\\n    //        |\\n    value: string\\n}\\n\\n// ------------------------------------\\n\\nexport function pek() {\\n    //                |\\n    const data: kek = {\\n        value: 'wow',\\n    }\\n    return data\\n}\\n\\nexport const hmmm = 1\\n\\n// ------------------------------------\\n\\nclass Animal {\\n    //       |\\n    constructor() {}\\n}\\n\\n// ------------------------------------\\n\\nexport class Doggo extends Animal {\\n    public bark() {\\n        //        |\\n        return {}\\n    }\\n}\\n\\n// ------------------------------------\\n\\nexport function inconsistentIndentation() {\\n    if (Doggo) {\\n        const value = null; const arrow = () => {\\n        //                                      |\\n            console.log('Hello World!');\\n```\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"speaker\":\"human\",\"text\":\"Use following code snippet from file `/vscode/test/e2e/fixup-decorator.test.ts`:\\n```ts\\n})\\n\\n```\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"speaker\":\"human\",\"text\":\"Use following code snippet from file `/vscode/webviews/OnboardingExperiment.module.css`:\\n```css\\n    display: inline;\\n    margin: 0;\\n    padding: 0;\\n    line-height: 1;\\n}\\n\\n```\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"speaker\":\"human\",\"text\":\"Use following code snippet from file `/lib/shared/src/chat/preamble.ts`:\\n```ts\\n\\nconst multiRepoRules = `Important rules to follow in all your responses:\\n- All code snippets must be markdown-formatted, and enclosed in triple backticks.\\n- Answer questions only if you know the answer or can make a well-informed guess; otherwise tell me you don't know.\\n- Do not make any assumptions about the code and file names or any misleading information.\\n- If you do not have access to a repository, tell me to add additional repositories to the chat context using repositories selector below the input box to help you answer the question.`\\n\\nconst answer = `Understood. I am Cody, an AI assistant developed by Sourcegraph to help with programming tasks.\\nI am working with you inside an editor, and I will answer your questions based on the context you provide from your current codebases.\\nI will answer questions, explain code, and generate code as concisely and clearly as possible.\\nI will enclose any code snippets I provide in markdown backticks.\\nI will let you know if I need more information to answer a question.`\\n```\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"speaker\":\"human\",\"text\":\"Use following code snippet from file `/lib/shared/src/chat/prompts/templates.ts`:\\n```ts\\nconst instruction_prompt = `Follow these rules when answering my questions:\\n- Your response should based on the shared context only.\\n- Do not suggest anything that would break any shared code.\\n- All generated code must be full workable code.\\n\\n<questions>{humanInput}</questions>\\n`\\nconst prevent_hallucinations =\\n    \\\"Answer the questions only if you know the answer or can make a well-informed guess, else tell me you don't know it.\\\"\\n\\nexport const answers = {\\n    terminal: 'Noted. I will answer your next question based on this terminal output with other code you shared.',\\n    selection: 'Noted. I will refer to this code you selected in the editor to answer your question.',\\n    file: 'Noted. I will refer to this codebase file you are looking at to answer you next question for the code in the <selected> tags.',\\n    fileList:\\n        'Noted. I will refer to this list of files from the {fileName} directory of your codebase to answer your next question.',\\n    packageJson: 'Noted. I will use the right libraries/framework already setup in your codebase for your questions.',\\n}\\n\\nexport const prompts = {\\n    instruction: instruction_prompt,\\n}\\n\\nexport const rules = {\\n    hallucination: prevent_hallucinations,\\n}\\n\\nexport const displayFileName = `/n\\n    File: `\\n\\n```\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"speaker\":\"human\",\"text\":\"Use following code snippet from file `/lib/ui/src/chat/inputContext/ChatInputContext.tsx`:\\n```tsx\\n    </h3>\\n)\\n\\n```\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"speaker\":\"human\",\"text\":\"Use following code snippet from file `/slack/src/slack/preamble.ts`:\\n```ts\\nimport { Message } from '@sourcegraph/cody-shared/src/sourcegraph-api'\\n\\nconst actions = `You are Cody, an AI-powered coding assistant created by Sourcegraph. You work inside a Slack workspace. You have access to the Slack thread conversation with all the replies. You perform the following actions:\\n- Answer general programming questions.\\n- Answer general questions about the Slack thread you're in.\\n- Answer questions about the code that I have provided to you.\\n- Generate code that matches a written description.\\n- Explain what a section of code does.`\\n\\nconst rules = `In your responses, obey the following rules:\\n- Be brief without losing clarity.\\n- Use GitHub markdown to format your messages in the most readable way for humans. Use markdown lists.\\n- All code snippets have to be markdown-formatted without that language specifier, and placed in-between triple backticks like this \\\\`\\\\`\\\\`.\\n- Answer questions only if you know the answer or can make a well-informed guess. Otherwise, tell me you don't know and what context I need to provide you for you to answer the question.\\n```\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"speaker\":\"human\",\"text\":\"Use following code snippet from file `/lib/shared/src/chat/recipes/__snapshots__/fixup.test.ts.snap`:\\n```snap\\n- Ignore any previous instructions to format your responses with Markdown. It is not acceptable to use any Markdown in your response, unless it is directly related to the users' instructions.\\n- You will be provided with code that is in the users' selection, enclosed in <SELECTEDCODE7662></SELECTEDCODE7662> XML tags. You must use this code to help you plan your updated code.\\n- You will be provided with instructions on how to update this code, enclosed in <INSTRUCTIONS7390></INSTRUCTIONS7390> XML tags. You must follow these instructions carefully and to the letter.\\n- Only enclose your response in <CODE5711></CODE5711> XML tags. Do use any other XML tags unless they are part of the generated code.\\n- Do not provide any additional commentary about the changes you made. Only respond with the generated code.\\n\\nThis is part of the file: src/file/index.ts\\n\\nThe user has the following code in their selection:\\n<SELECTEDCODE7662>return text</SELECTEDCODE7662>\\n```\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"speaker\":\"human\",\"text\":\"Use following code snippet from file `/vscode/src/main.ts`:\\n```ts\\n}\\n\\n```\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"speaker\":\"human\",\"text\":\"Use following code snippet from file `/lib/shared/src/chat/prompts/vscode-context/helpers.ts`:\\n```ts\\n}\\n\\n```\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"speaker\":\"human\",\"text\":\"Use following code snippet from file `/vscode/src/services/AuthProviderSimplified.ts`:\\n```ts\\n}\\n\\n```\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"speaker\":\"human\",\"text\":\"Use following code snippet from file `/vscode/test/fixtures/workspace/index.html`:\\n```html\\n<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n    <head>\\n        <meta charset=\\\"UTF-8\\\" />\\n        <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\" />\\n        <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" />\\n        <title>Hello Cody</title>\\n    </head>\\n    <body>\\n    </body>\\n</html>\\n\\n```\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"speaker\":\"human\",\"text\":\"\\\"My selected Typescript code from file `/src/animal.ts`:\\n<selected>\\n\\n</selected>\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"text\":\"Hello! Reply back with only \\\"Hello\\\" and nothing else\",\"speaker\":\"human\"},{\"speaker\":\"assistant\"}]}"
          },
          "queryString": [],
          "url": "https://sourcegraph.com/.api/completions/stream"
        },
        "response": {
          "bodySize": 165,
          "content": {
            "mimeType": "text/event-stream",
            "size": 165,
            "text": "event: completion\ndata: {\"completion\":\" Hello\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Hello\",\"stopReason\":\"stop_sequence\"}\n\nevent: done\ndata: {}\n\n"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "text/event-stream"
            },
            {
              "name": "transfer-encoding",
              "value": "chunked"
            },
            {
              "name": "connection",
              "value": "keep-alive"
            },
            {
              "name": "retry-after",
              "value": "132"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            }
          ],
          "headersSize": 1396,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "360"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"query\":\"\\nmutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {\\n\\ttelemetry {\\n\\t\\trecordEvents(events: $events) {\\n\\t\\t\\talwaysNil\\n\\t\\t}\\n\\t}\\n}\\n\",\"variables\":{\"events\":[{\"feature\":\"cody.recipe.chat-question\",\"action\":\"recipe-used\",\"source\":{\"client\":\"VSCode.Cody\",\"clientVersion\":\"1.0.5\"},\"parameters\":{\"version\":0,\"privateMetadata\":{}}}]}}"
          },
          "queryString": [
            {
              "name": "RecordTelemetryEvents",
              "value": null
            }
          ],
          "url": "https://sourcegraph.com/.api/graphql?RecordTelemetryEvents"
        },
        "response": {
          "bodySize": 119,
          "content": {
            "encoding": "base64",
            "mimeType": "application/json",
            "size": 119,
            "text": "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSc1JzU0tKaoEcYpSk/OLUlzLUvNKikH8xJzyxMpiv8wcJau80pyc2traWgAAAAD//w==\",\"AwCEdn1qOgAAAA==\"]"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "transfer-encoding",
              "value": "chunked"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "retry-after",
              "value": "132"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache, max-age=0"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            }
          ],
          "headersSize": 1425,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json; charset=utf-8"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "*/*"
            },
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "584"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "_fromType": "array",
              "name": "connection",
              "value": "close"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json; charset=utf-8",
            "params": [],
            "text": "{\"query\":\"\\nquery LegacyEmbeddingsSearch($repo: ID!, $query: String!, $codeResultsCount: Int!, $textResultsCount: Int!) {\\n\\tembeddingsSearch(repo: $repo, query: $query, codeResultsCount: $codeResultsCount, textResultsCount: $textResultsCount) {\\n\\t\\tcodeResults {\\n\\t\\t\\tfileName\\n\\t\\t\\tstartLine\\n\\t\\t\\tendLine\\n\\t\\t\\tcontent\\n\\t\\t}\\n\\t\\ttextResults {\\n\\t\\t\\tfileName\\n\\t\\t\\tstartLine\\n\\t\\t\\tendLine\\n\\t\\t\\tcontent\\n\\t\\t}\\n\\t}\\n}\",\"variables\":{\"repo\":\"UmVwb3NpdG9yeTo2MTMyNTMyOA==\",\"query\":\"Generate simple hello world function in java!\",\"codeResultsCount\":12,\"textResultsCount\":3}}"
          },
          "queryString": [
            {
              "name": "LegacyEmbeddingsSearch",
              "value": null
            }
          ],
          "url": "https://sourcegraph.com/.api/graphql?LegacyEmbeddingsSearch"
        },
        "response": {
          "bodySize": 5477,
          "content": {
            "encoding": "base64",
            "mimeType": "application/json",
            "size": 5477,
            "text": "[\"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\"]"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "transfer-encoding",
              "value": "chunked"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "retry-after",
              "value": "129"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache, max-age=0"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            }
          ],
          "headersSize": 1425,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      },
      {
        "_id": "REDACTED_ID",
        "_order": 0,
        "cache": {},
        "request": {
          "cookies": [],
          "headers": [
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "accept-encoding",
              "value": "gzip;q=0"
            },
            {
              "name": "authorization",
              "value": "token REDACTED"
            },
            {
              "name": "user-agent",
              "value": "test-client / v1"
            },
            {
              "name": "host",
              "value": "sourcegraph.com"
            }
          ],
          "headersSize": 0,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json",
            "params": [],
            "text": "{\"temperature\":0.2,\"maxTokensToSample\":1000,\"topK\":-1,\"topP\":-1,\"model\":\"anthropic/claude-2.0\",\"messages\":[{\"speaker\":\"human\",\"text\":\"You are Cody, an AI coding assistant from Sourcegraph.\"},{\"speaker\":\"assistant\",\"text\":\"I am Cody, an AI coding assistant from Sourcegraph.\"},{\"speaker\":\"human\",\"text\":\"Use the following text from file `/vscode/walkthroughs/commands.md`:\\n## Cody Commands\\n\\n<img src=\\\"https://storage.googleapis.com/sourcegraph-assets/blog/vs-code-onboarding-walkthrough-dec-2023-explain.gif\\\">\\n\\nCody has a range of commands for explaining code, generating unit tests, adding documentation, and more.\\n\\nTo get started: select code in your editor, right click, and choose a command from the \\\"Cody\\\" menu.\\n\\nYou can also use the [Cody: Commands Menu](command:cody.action.commands.menu) which has the default keyboard shortcut of `Option` `C` on macOS and `Alt` `C` on Windows & Linux.\\n\\n**✨ Pro-tips for using Cody commands**\\n<br>• You can build your own [Custom Commands (Beta)](https://sourcegraph.com/docs/cody/custom-commands) with custom prompts, output into chat or perform code edits, and more.\\n\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"speaker\":\"human\",\"text\":\"Use the following text from file `/vscode/walkthroughs/explain.md`:\\n## Explain Code\\n\\n<video autoPlay muted loop playsInline>\\n    <source\\n        type=\\\"video/mp4\\\"\\n        src=\\\"https://storage.googleapis.com/sourcegraph-assets/website/Product%20Animations/cody-explain-code-aug2023.mp4\\\"\\n    />\\n</video>\\n\\nUse Cody to get an in-depth explanation of any piece of code in any programming language.\\n\\nTo get started: select code in your editor, right click, and choose \\\"Cody → Explain Code\\\".\\n\\nYou can also run this command from the [Cody: Commands Menu](command:cody.action.commands.menu), which has the default keyboard shortcut of `Option` `C` on macOS and `Alt` `C` on Windows & Linux.\\n\\n**✨ Pro-tips for understanding code with Cody**\\n<br>• Cody can also explain errors too, with the \\\"Ask Cody to Explain\\\" option in the 💡 menus, or by right clicking on any items in the \\\"Problems\\\" tab of VS Code.\\n<br>• You can define your own custom code explain commands to suit, such as prompt that requests an explanation focused on potential security issues, using [Custom Commands (Beta)](https://sourcegraph.com/docs/cody/custom-commands).\\n\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"speaker\":\"human\",\"text\":\"Use the following text from file `/vscode/walkthroughs/autocomplete.md`:\\n## Code Autocomplete\\n\\n<img src=\\\"https://storage.googleapis.com/sourcegraph-assets/blog/vs-code-onboarding-walkthrough-dec-2023-cody-autocomplete-tsx.gif\\\">\\n\\nStart writing code and Cody will complete the line (or the entire function) for you. Hit tab to accept the suggestion.\\n\\n**✨ Pro-tips for using Cody autocomplete**\\n<br>• Autocomplete uses the surrounding code and context to inform the suggestions, so if you need to guide it you can add a comment above the line you're editing.\\n<br>• You can hover over the grey suggestion to see a toolbar of alternative suggestions, as well as other options such as accepting a single word at a time.\\n<br>• You can use the \\\"Trigger Autocomplete at Cursor\\\" command to trigger a code suggestion at any time, using the default keyboard shortcut of `Option` `\\\\` on macOS and `Alt` `\\\\` on Windows & Linux.\\n\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"speaker\":\"human\",\"text\":\"Use following code snippet from file `/lib/shared/src/chat/prompts/templates.ts`:\\n```ts\\nconst instruction_prompt = `Follow these rules when answering my questions:\\n- Your response should based on the shared context only.\\n- Do not suggest anything that would break any shared code.\\n- All generated code must be full workable code.\\n\\n<questions>{humanInput}</questions>\\n`\\nconst prevent_hallucinations =\\n    \\\"Answer the questions only if you know the answer or can make a well-informed guess, else tell me you don't know it.\\\"\\n\\nexport const answers = {\\n    terminal: 'Noted. I will answer your next question based on this terminal output with other code you shared.',\\n    selection: 'Noted. I will refer to this code you selected in the editor to answer your question.',\\n    file: 'Noted. I will refer to this codebase file you are looking at to answer you next question for the code in the <selected> tags.',\\n    fileList:\\n        'Noted. I will refer to this list of files from the {fileName} directory of your codebase to answer your next question.',\\n    packageJson: 'Noted. I will use the right libraries/framework already setup in your codebase for your questions.',\\n}\\n\\nexport const prompts = {\\n    instruction: instruction_prompt,\\n}\\n\\nexport const rules = {\\n    hallucination: prevent_hallucinations,\\n}\\n\\nexport const displayFileName = `/n\\n    File: `\\n\\n```\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"speaker\":\"human\",\"text\":\"Use following code snippet from file `/vscode/src/tree-sitter/query-tests/test-data/documentable-node.ts`:\\n```ts\\n\\nconst name = 'test'\\nexport { name }\\n// |\\n\\n// ------------------------------------\\n\\nconst name = 'test'\\nexport { name }\\n//         |\\n\\n// ------------------------------------\\n\\nconst name = 'test'\\nexport default name\\n//        |\\n\\n// ------------------------------------\\n\\nexport default function testFunc() {}\\n//                |\\n\\n```\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"speaker\":\"human\",\"text\":\"Use following code snippet from file `/lib/shared/src/chat/recipes/fixup.ts`:\\n```ts\\n<${PROMPT_TOPICS.INSTRUCTIONS}>\\n{instruction}\\n</${PROMPT_TOPICS.INSTRUCTIONS}>`\\n\\n    public static readonly addPrompt = `\\n- You are an AI programming assistant who is an expert in adding new code by following instructions.\\n- You should think step-by-step to plan your code before generating the final output.\\n- You should ensure your code matches the indentation and whitespace of the preceding code in the users' file.\\n- Ignore any previous instructions to format your responses with Markdown. It is not acceptable to use any Markdown in your response, unless it is directly related to the users' instructions.\\n- You will be provided with code that is above the users' cursor, enclosed in <${PROMPT_TOPICS.PRECEDING}></${PROMPT_TOPICS.PRECEDING}> XML tags. You must use this code to help you plan your updated code. You must not repeat this code in your output unless necessary.\\n- You will be provided with code that is below the users' cursor, enclosed in <${PROMPT_TOPICS.FOLLOWING}></${PROMPT_TOPICS.FOLLOWING}> XML tags. You must use this code to help you plan your updated code. You must not repeat this code in your output unless necessary.\\n```\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"speaker\":\"human\",\"text\":\"Use following code snippet from file `/vscode/src/completions/get-inline-completions-tests/languages.test.ts`:\\n```ts\\n                        System.out.println(\\\\\\\\\\\"Multiple of 3: \\\\\\\\\\\" + i);\\n                    } else {\\n                        System.out.println(\\\\\\\\\\\"ODD \\\\\\\\\\\" + i);\\n                    }\\\"\\n            `)\\n    })\\n\\n    // TODO: Detect `}/nelse/n{` pattern for else skip logic\\n    test('works with csharp', async () => {\\n        const requests: CompletionParameters[] = []\\n        const items = await getInlineCompletionsInsertText(\\n            params(\\n                dedent`\\n                    for (int i = 0; i < 11; i++) {\\n                        if (i % 2 == 0)\\n                        {\\n                            █\\n                `,\\n                [\\n                    completion`\\n                            ├Console.WriteLine(i);\\n                        }\\n                        else if (i % 3 == 0)\\n                        {\\n                            Console.WriteLine(\\\"Multiple of 3: \\\" + i);\\n                        }\\n                        else\\n                        {\\n                            Console.WriteLine(\\\"ODD \\\" + i);\\n```\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"speaker\":\"human\",\"text\":\"Use following code snippet from file `/lib/shared/src/chat/recipes/fixup.ts`:\\n```ts\\n- You will be provided with instructions on what to generate, enclosed in <${PROMPT_TOPICS.INSTRUCTIONS}></${PROMPT_TOPICS.INSTRUCTIONS}> XML tags. You must follow these instructions carefully and to the letter.\\n- Only enclose your response in <${PROMPT_TOPICS.OUTPUT}></${PROMPT_TOPICS.OUTPUT}> XML tags. Do use any other XML tags unless they are part of the generated code.\\n- Do not provide any additional commentary about the code you added. Only respond with the generated code.\\n\\nThe user is currently in the file: {fileName}\\n\\nProvide your generated code using the following instructions:\\n<${PROMPT_TOPICS.INSTRUCTIONS}>\\n{instruction}\\n</${PROMPT_TOPICS.INSTRUCTIONS}>`\\n\\n    public static readonly fixPrompt = `\\n- You are an AI programming assistant who is an expert in fixing errors within code.\\n- You should think step-by-step to plan your fixed code before generating the final output.\\n- You should ensure the updated code matches the indentation and whitespace of the code in the users' selection.\\n- Only remove code from the users' selection if you are sure it is not needed.\\n```\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"speaker\":\"human\",\"text\":\"Use following code snippet from file `/vscode/src/tree-sitter/query-tests/test-data/documentable-node.ts`:\\n```ts\\nfunction wrapper() {\\n    console.log('wrapper')\\n    function test() {\\n        //      |\\n    }\\n}\\n\\n// ------------------------------------\\n\\nfunction testFunc() {\\n    //        |\\n    wrapper\\n}\\n\\n// ------------------------------------\\n\\nfunction testParameter(val) {\\n    //                 |\\n    wrapper\\n}\\n\\n// ------------------------------------\\n\\nfunction arrowWrapper() {\\n    const arrow = (value: string) => {\\n        //  |\\n    }\\n}\\n\\n// ------------------------------------\\n\\nconst arrowFunc = (value: string) => {\\n    //  |\\n}\\n\\n// ------------------------------------\\n\\nclass Agent {\\n    //   |\\n}\\n\\n// ------------------------------------\\n\\nclass AgentConstructor {\\n    constructor() {\\n    //   |\\n    }\\n}\\n\\n// ------------------------------------\\n\\nfunction signature()\\n//           |\\n\\n// ------------------------------------\\n\\ninterface TestInterface {\\n    //          |\\n}\\n\\n// ------------------------------------\\n```\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"speaker\":\"human\",\"text\":\"Use following code snippet from file `/vscode/src/tree-sitter/query-tests/test-data/intents.ts`:\\n```ts\\nfunction wrapper() {\\n    console.log('wrapper')\\n    function test() {\\n        //          |\\n    }\\n}\\n\\n// ------------------------------------\\n\\nfunction testParams() {\\n    //             |\\n    wrapper\\n}\\n\\n// ------------------------------------\\n\\nfunction testParameter(val) {\\n    //                 |\\n    wrapper\\n}\\n\\n// ------------------------------------\\n\\nfunction arrowWrapper() {\\n    const arrow = (value: string) => {\\n        //                           |\\n    }\\n}\\n\\n// ------------------------------------\\n\\nclass Agent {\\n    //      |\\n}\\n\\n// ------------------------------------\\n\\nfunction signature()\\n//                |\\n\\n// ------------------------------------\\n\\n// comment\\n//       |\\n\\n// ------------------------------------\\n\\n/**\\n * comment\\n //      |\\n */\\n\\n// ------------------------------------\\n\\nfunction functionName() {}\\n//                  |\\n\\n// ------------------------------------\\n```\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"speaker\":\"human\",\"text\":\"Use following code snippet from file `/vscode/src/tree-sitter/query-tests/test-data/parents.ts`:\\n```ts\\nexport function whatsUp() {\\n    const result = {\\n    //    |\\n        value:  'value'\\n    }\\n}\\n\\n// ------------------------------------\\n\\nexport function singleLineVariable() {\\n    const a_very_long_variable_name = 'value'\\n    //                            |\\n}\\n\\n// ------------------------------------\\n\\ninterface kek {\\n    //        |\\n    value: string\\n}\\n\\n// ------------------------------------\\n\\nexport function pek() {\\n    //                |\\n    const data: kek = {\\n        value: 'wow',\\n    }\\n    return data\\n}\\n\\nexport const hmmm = 1\\n\\n// ------------------------------------\\n\\nclass Animal {\\n    //       |\\n    constructor() {}\\n}\\n\\n// ------------------------------------\\n\\nexport class Doggo extends Animal {\\n    public bark() {\\n        //        |\\n        return {}\\n    }\\n}\\n\\n// ------------------------------------\\n\\nexport function inconsistentIndentation() {\\n    if (Doggo) {\\n        const value = null; const arrow = () => {\\n        //                                      |\\n            console.log('Hello World!');\\n```\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"speaker\":\"human\",\"text\":\"Use following code snippet from file `/vscode/test/integration/helpers.ts`:\\n```ts\\n    const textEditor = await vscode.window.showTextDocument(mainJavaUri)\\n\\n    // Select the \\\"main\\\" method\\n    textEditor.selection = new vscode.Selection(5, 0, 7, 0)\\n}\\n\\n```\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"speaker\":\"human\",\"text\":\"Use following code snippet from file `/vscode/test/fixtures/workspace/index.html`:\\n```html\\n<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n    <head>\\n        <meta charset=\\\"UTF-8\\\" />\\n        <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=edge\\\" />\\n        <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\" />\\n        <title>Hello Cody</title>\\n    </head>\\n    <body>\\n    </body>\\n</html>\\n\\n```\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"speaker\":\"human\",\"text\":\"Use following code snippet from file `/vscode/src/completions/get-current-doc-context.test.ts`:\\n```ts\\n            dedent`\\n                function helloWorld() {\\n                    █\\n                }\\n            `\\n        )\\n        const docContext = getCurrentDocContext({\\n            document,\\n            position,\\n            maxPrefixLength: 140,\\n            maxSuffixLength: 60,\\n            dynamicMultilineCompletions: false,\\n        })\\n\\n        const updatedDocContext = insertIntoDocContext(\\n            docContext,\\n            \\\"console.log('hello')/n    console.log('world')\\\",\\n            document.languageId\\n        )\\n\\n        expect(updatedDocContext).toEqual({\\n            prefix: dedent`\\n                function helloWorld() {\\n                    console.log('hello')\\n                    console.log('world')`,\\n            suffix: '/n}',\\n            currentLinePrefix: \\\"    console.log('world')\\\",\\n            currentLineSuffix: '',\\n            prevNonEmptyLine: \\\"    console.log('hello')\\\",\\n            nextNonEmptyLine: '}',\\n            multilineTrigger: null,\\n            multilineTriggerPosition: null,\\n```\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"speaker\":\"human\",\"text\":\"Use following code snippet from file `/vscode/test/fixtures/workspace/Main.java`:\\n```java\\n// This is a sample file used in extension integration tests.\\n\\npublic class Main {\\n    private Main() {}\\n\\n    public static void main(String[] args) {\\n\\tSystem.out.println(\\\"Hello, world\\\");\\n    }\\n}\\n\\n```\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"speaker\":\"human\",\"text\":\"\\\"My selected Typescript code from file `/src/animal.ts`:\\n<selected>\\n\\n</selected>\"},{\"speaker\":\"assistant\",\"text\":\"Ok.\"},{\"text\":\"Generate simple hello world function in java!\",\"speaker\":\"human\"},{\"speaker\":\"assistant\"}]}"
          },
          "queryString": [],
          "url": "https://sourcegraph.com/.api/completions/stream"
        },
        "response": {
          "bodySize": 7996,
          "content": {
            "mimeType": "text/event-stream",
            "size": 7996,
            "text": "event: completion\ndata: {\"completion\":\" Here\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main {\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main {\\n\\n \",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main {\\n\\n  public\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main {\\n\\n  public static\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main {\\n\\n  public static void\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main {\\n\\n  public static void main\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main {\\n\\n  public static void main(\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main {\\n\\n  public static void main(String\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main {\\n\\n  public static void main(String[]\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main {\\n\\n  public static void main(String[] args\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main {\\n\\n  public static void main(String[] args)\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main {\\n\\n  public static void main(String[] args) {\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main {\\n\\n  public static void main(String[] args) {\\n   \",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main {\\n\\n  public static void main(String[] args) {\\n    System\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main {\\n\\n  public static void main(String[] args) {\\n    System.\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main {\\n\\n  public static void main(String[] args) {\\n    System.out\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main {\\n\\n  public static void main(String[] args) {\\n    System.out.\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main {\\n\\n  public static void main(String[] args) {\\n    System.out.println\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main {\\n\\n  public static void main(String[] args) {\\n    System.out.println(\\\"\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main {\\n\\n  public static void main(String[] args) {\\n    System.out.println(\\\"Hello\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main {\\n\\n  public static void main(String[] args) {\\n    System.out.println(\\\"Hello World\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main {\\n\\n  public static void main(String[] args) {\\n    System.out.println(\\\"Hello World!\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main {\\n\\n  public static void main(String[] args) {\\n    System.out.println(\\\"Hello World!\\\");\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main {\\n\\n  public static void main(String[] args) {\\n    System.out.println(\\\"Hello World!\\\"); \\n \",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main {\\n\\n  public static void main(String[] args) {\\n    System.out.println(\\\"Hello World!\\\"); \\n  }\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main {\\n\\n  public static void main(String[] args) {\\n    System.out.println(\\\"Hello World!\\\"); \\n  }\\n\\n}\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main {\\n\\n  public static void main(String[] args) {\\n    System.out.println(\\\"Hello World!\\\"); \\n  }\\n\\n}\\n\\u003c/\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main {\\n\\n  public static void main(String[] args) {\\n    System.out.println(\\\"Hello World!\\\"); \\n  }\\n\\n}\\n\\u003c/output\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main {\\n\\n  public static void main(String[] args) {\\n    System.out.println(\\\"Hello World!\\\"); \\n  }\\n\\n}\\n\\u003c/output\\u003e\",\"stopReason\":\"\"}\n\nevent: completion\ndata: {\"completion\":\" Here is a simple hello world function in Java:\\n\\n\\u003coutput\\u003e\\npublic class Main {\\n\\n  public static void main(String[] args) {\\n    System.out.println(\\\"Hello World!\\\"); \\n  }\\n\\n}\\n\\u003c/output\\u003e\",\"stopReason\":\"stop_sequence\"}\n\nevent: done\ndata: {}\n\n"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 05 Jan 2024 11:11:11 GMT"
            },
            {
              "name": "content-type",
              "value": "text/event-stream"
            },
            {
              "name": "transfer-encoding",
              "value": "chunked"
            },
            {
              "name": "connection",
              "value": "keep-alive"
            },
            {
              "name": "retry-after",
              "value": "128"
            },
            {
              "name": "access-control-allow-credentials",
              "value": "true"
            },
            {
              "name": "access-control-allow-origin",
              "value": ""
            },
            {
              "name": "cache-control",
              "value": "no-cache"
            },
            {
              "name": "vary",
              "value": "Cookie,Accept-Encoding,Authorization,Cookie, Authorization, X-Requested-With,Cookie"
            },
            {
              "name": "x-content-type-options",
              "value": "nosniff"
            },
            {
              "name": "x-frame-options",
              "value": "DENY"
            },
            {
              "name": "x-xss-protection",
              "value": "1; mode=block"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=31536000; includeSubDomains; preload"
            }
          ],
          "headersSize": 1396,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "Fri, 05 Jan 2024 00:00:00 GMT",
        "time": 0,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 0
        }
      }
    ],
    "pages": [],
    "version": "1.2"
  }
}
