// DO NOT EDIT
// This file is generated by generateDiagnosticCodeEnum.ts
// Source of truth: https://raw.githubusercontent.com/microsoft/TypeScript/main/src/compiler/diagnosticMessages.json
export enum DiagnosticCode {
    /** Type '{0}' is not assignable to type '{1}'. */ TS2322 = '2322',
    /** Property '{0}' does not exist on type '{1}'. */ TS2339 = '2339',
    /** Argument of type '{0}' is not assignable to parameter of type '{1}'. */ TS2345 = '2345',
    /** Type '{0}' has no properties in common with type '{1}'. */ TS2559 = '2559',
    /** Type '{0}' is missing the following properties from type '{1}': {2} */ TS2739 = '2739',
    /** Type '{0}' is missing the following properties from type '{1}': {2}, and {3} more. */ TS2740 = '2740',
    /** Property '{0}' is missing in type '{1}' but required in type '{2}'. */ TS2741 = '2741',
    /** No overload matches this call. */ TS2769 = '2769',
}
const allCodes = new Set(Object.values(DiagnosticCode) as string[])
export function isDiagnosticCode(code?: string): code is DiagnosticCode {
    return code !== undefined && allCodes.has(code)
}